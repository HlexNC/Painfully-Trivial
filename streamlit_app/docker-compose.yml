version: '3.8'

services:
  waste-sorting-app:
    build:
      context: .
      dockerfile: Dockerfile
    image: ghcr.io/hlexnc/waste-sorting-assistant:latest
    container_name: waste-sorting-assistant
    ports:
      - "8501:8501"
    environment:
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_HEADLESS=true
      - STREAMLIT_BROWSER_GATHER_USAGE_STATS=false
      - PYTHONUNBUFFERED=1
    volumes:
      # Mount models directory for persistence
      - ./models:/app/models
      # For development only - mount source code
      # - ./app.py:/app/app.py
      # - ./pages:/app/pages
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - waste-sorting-network
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '1'
          memory: 2G

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: waste-sorting-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - waste-sorting-app
    networks:
      - waste-sorting-network
    profiles:
      - production

  # Optional: Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: waste-sorting-prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - waste-sorting-network
    profiles:
      - monitoring

  # Optional: Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: waste-sorting-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - waste-sorting-network
    profiles:
      - monitoring

networks:
  waste-sorting-network:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data: